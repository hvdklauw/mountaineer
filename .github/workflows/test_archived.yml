# name: Filzl Tests

# on: push

# jobs:
#   run_python_tests:
#     name: Run python tests
#     runs-on: ubuntu-latest

#     strategy:
#       matrix:
#         #python: ["3.11", "3.12"]
#         python: ["3.11"]

#     steps:
#       - uses: actions/checkout@v3

#       - uses: actions/setup-python@v5
#         with:
#           python-version: ${{ matrix.python }}

#       - run: curl https://sh.rustup.rs -sSf | sh -s -- --default-toolchain=stable --profile=default -y

#       - name: Install poetry
#         run: curl -sSL https://install.python-poetry.org | python3 -

#       - name: Install python dependencies
#         run: |
#           export PATH="/Users/runner/.local/bin:/Users/runner/.cargo/bin:$PATH"
#           rm poetry.lock
#           poetry install
#           poetry run maturin develop

#       - name: Run tests
#         run: |
#           poetry run pytest

#   run_typehinting:
#     name: Run typehinting
#     runs-on: ubuntu-latest

#     strategy:
#       matrix:
#         python: ["3.11"]

#     steps:
#       - uses: actions/checkout@v3

#       - uses: actions/setup-python@v5
#         with:
#           python-version: ${{ matrix.python }}

#       - run: curl https://sh.rustup.rs -sSf | sh -s -- --default-toolchain=stable --profile=default -y

#       - name: Install poetry
#         run: curl -sSL https://install.python-poetry.org | python3 -

#       - name: Install
#         run: |
#           export PATH="/Users/runner/.local/bin:/Users/runner/.cargo/bin:$PATH"
#           rm poetry.lock
#           poetry install

#       - name: Run typehinting
#         run: |
#           ./lint_validate.sh

#   # build_wheels:
#   #   name: Build wheels with cibuildwheel
#   #   runs-on: ubuntu-latest
#   #   strategy:
#   #     fail-fast: true
#   #     matrix:
#   #       python: ["3.11", "3.12"]
#   #       architecture: ["x86_64", "aarch64"]
#   #   steps:
#   #     - uses: actions/checkout@v3

#   #     - uses: actions/setup-python@v5
#   #       with:
#   #         python-version: ${{ matrix.python }}

#   #     - name: Install cibuildwheel
#   #       run: python -m pip install cibuildwheel

#   #     - name: Reformat Python Version and Set Env Variable
#   #       uses: actions/github-script@v6
#   #       with:
#   #         script: |
#   #           const version = '${{ matrix.python }}'.replace(/\./g, '');
#   #           console.log(`Formatted Python version: cp${version}`);
#   #           core.exportVariable('CIBW_BUILD', `cp${version}-${{ matrix.architecture }}`);

#   #     - name: Build Wheels
#   #       run: |
#   #         cibuildwheel --output-dir wheelhouse
#   #       env:
#   #         CIBW_ARCHS: ${{ matrix.architecture }}

#   #     - uses: actions/upload-artifact@v3
#   #       with:
#   #         name: wheels
#   #         path: ./wheelhouse/*.whl

#   build_wheels:
#     name: Build wheels on ${{ matrix.os }}
#     runs-on: ${{ matrix.os }}
#     strategy:
#       fail-fast: false
#       matrix:
#         os: [ubuntu-latest, macos-latest]

#     env:
#       CIBW_BUILD_VERBOSITY: 1
#       CIBW_BEFORE_ALL_LINUX: "curl https://sh.rustup.rs -sSf | sh -s -- --default-toolchain stable -y && yum install -y openssl-devel perl-IPC-Cmd"
#       CIBW_BEFORE_BUILD_LINUX: "pip3 install --upgrade keyrings.alt"
#       CIBW_ARCHS_LINUX: "auto aarch64"
#       CIBW_ENVIRONMENT: 'PATH="$PATH:$HOME/.cargo/bin"'
#       CIBW_SKIP: "cp36-* cp37-* cp38-* cp39-* pp* *-win32 *-musllinux* *_i686 cp310-*"

#     steps:
#       - uses: actions/checkout@v2

#       - uses: actions-rs/toolchain@v1
#         with:
#           profile: minimal
#           toolchain: stable
#           override: true

#       - if: runner.os == 'Linux'
#         name: Set up QEMU
#         id: qemu
#         uses: docker/setup-qemu-action@v1
#         with:
#           image: tonistiigi/binfmt:latest
#           platforms: arm64

#       - uses: actions/setup-python@v2
#         name: Install Python
#         with:
#           python-version: "3.11"

#       - name: Install cibuildwheel
#         run: |
#           python -m pip install cibuildwheel

#       - name: Build wheels
#         run: |
#           python -m cibuildwheel --output-dir wheelhouse

#       - uses: actions/upload-artifact@v2
#         with:
#           path: ./wheelhouse/*.whl

#   build_sdist:
#     name: Build source distribution
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v2

#       - uses: actions/setup-python@v2
#         name: Install Python
#         with:
#           python-version: "3.11"

#       - name: Install setuptools and setuptools-rust
#         run: |
#           python -m pip install --upgrade wheel setuptools setuptools-rust maturin

#       - name: Build sdist
#         run: python -m maturin sdist

#       - uses: actions/upload-artifact@v2
#         with:
#           path: dist/*.tar.gz

#   upload_pypi:
#     needs: [build_wheels, build_sdist]
#     runs-on: ubuntu-latest

#     steps:
#       - uses: actions/download-artifact@v2
#         with:
#           name: artifact
#           path: dist

#       - uses: pypa/gh-action-pypi-publish@master
#         with:
#           user: __token__
#           password: ${{ secrets.TWINE_PASSWORD }}
